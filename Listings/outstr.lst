


ARM Macro Assembler    Page 1 


    1 00000000         ; outstr.s
    2 00000000         ; Runs on TM4C123
    3 00000000         
    4 00000000         ; Prints a string located in memory
    5 00000000         ; to UART0
    6 00000000         ; Starting address of string is passed
    7 00000000         ; to R0
    8 00000000         
    9 00000000         
   10 00000000         ; Baud = 9600, 8-bit, No Parity
   11 00000000         ; 1 Stop bit, No flow control
   12 00000000         
   13 00000000         
   14 00000000         ; GPIO Registers *****************
   15 00000000 400FE608 
                       RCGCGPIO
                               EQU              0x400FE608  ; GPIO clock regist
                                                            er
   16 00000000         ; PORT B base address   = 0x40004000
   17 00000000 4000451C 
                       PORTA_DEN
                               EQU              0x4000451C  ; Digital Enable
   18 00000000 4000452C 
                       PORTA_PCTL
                               EQU              0x4000452C  ; Alternate functio
                                                            n select
   19 00000000 40004420 
                       PORTA_AFSEL
                               EQU              0x40004420  ; Enable Alt functi
                                                            ons
   20 00000000 40004528 
                       PORTA_AMSEL
                               EQU              0x40004528  ; Enable analog
   21 00000000 40004500 
                       PORTA_DR2R
                               EQU              0x40004500  ; Drive current sel
                                                            ect
   22 00000000         
   23 00000000         
   24 00000000         ; UART Registers *****************
   25 00000000 400FE618 
                       RCGCUART
                               EQU              0x400FE618  ; UART clock regist
                                                            er
   26 00000000         
   27 00000000 4000C000 
                       UART0_DR
                               EQU              0x4000C000  ; UART0 data / base
                                                             address
   28 00000000 4000C030 
                       UART0_CTL
                               EQU              0x4000C030  ; UART0 control reg
                                                            ister
   29 00000000 4000C024 
                       UART0_IBRD
                               EQU              0x4000C024  ; Baud rate divisor
                                                             Integer part
   30 00000000 4000C028 
                       UART0_FBRD



ARM Macro Assembler    Page 2 


                               EQU              0x4000C028  ; Baud rate divisor
                                                             Fractional part
   31 00000000 4000C02C 
                       UART0_LCRH
                               EQU              0x4000C02C  ; UART serial param
                                                            eters
   32 00000000 4000CFC8 
                       UART0_CC
                               EQU              0x4000CFC8  ; UART clock config
                                                            
   33 00000000 4000C018 
                       UART0_FR
                               EQU              0x4000C018  ; UART status
   34 00000000         
   35 00000000         ; PLL Registers *****************
   36 00000000 400FE070 
                       SYSCTL_RCC2_R
                               EQU              0x400FE070  ; PLL control
   37 00000000         
   38 00000000                 AREA             |.text|, READONLY, CODE, ALIGN=
2
   39 00000000                 THUMB
   40 00000000         
   41 00000000                 EXPORT           OutStr      ; make available to
                                                             other programs
   42 00000000         
   43 00000000         OutStr
   44 00000000 B41E            PUSH             {R1-R4}     ; store current reg
                                                            ister conditions
   45 00000002         
   46 00000002         
   47 00000002         ; Disable PLL
   48 00000002 492D            LDR              R1,=SYSCTL_RCC2_R
   49 00000004 680B            LDR              R3,[R1]
   50 00000006 B408            PUSH             {R3}        ; store current sta
                                                            te
   51 00000008 F443 5300       ORR              R3,R3,#0x00002000 
                                                            ; Power-Down PLL 2
   52 0000000C 600B            STR              R3,[R1]
   53 0000000E         
   54 0000000E         
   55 0000000E         
   56 0000000E         ; Setup UART registers and GPIO 
   57 0000000E         
   58 0000000E         ; Enable UART clock
   59 0000000E 492B            LDR              R1, =RCGCUART
   60 00000010 680B            LDR              R3, [R1]
   61 00000012 F043 0301       ORR              R3, R3, #0x01 ; set bit 0 to en
                                                            able UART0 clock
   62 00000016 600B            STR              R3, [R1]
   63 00000018 BF00            NOP                          ; Let clock stabili
                                                            ze
   64 0000001A BF00            NOP
   65 0000001C BF00            NOP
   66 0000001E         
   67 0000001E         ; Setup GPIO *******************************************
                       ***************************
   68 0000001E         ; Enable GPIO clock to use debug USB as com port (PA0, P
                       A1)



ARM Macro Assembler    Page 3 


   69 0000001E 4928            LDR              R1, =RCGCGPIO
   70 00000020 680B            LDR              R3, [R1]
   71 00000022 F043 0301       ORR              R3, R3, #0x01 ; set bit 0 to en
                                                            able port A clock
   72 00000026 600B            STR              R3, [R1]
   73 00000028 BF00            NOP                          ; Let clock stabili
                                                            ze
   74 0000002A BF00            NOP
   75 0000002C BF00            NOP
   76 0000002E         
   77 0000002E         ; Make PA0, PA1 digital
   78 0000002E 4925            LDR              R1, =PORTA_DEN
   79 00000030 680B            LDR              R3, [R1]
   80 00000032 F043 0303       ORR              R3, R3, #0x03 ; set bits 1,0 to
                                                             enable alt functio
                                                            ns on PA0, PA1
   81 00000036 600B            STR              R3, [R1]
   82 00000038         
   83 00000038         ; Disable analog on PA0, PA1
   84 00000038 4923            LDR              R1, =PORTA_AMSEL
   85 0000003A 680B            LDR              R3, [R1]
   86 0000003C F023 0303       BIC              R3, R3, #0x03 ; clear bits 1,0 
                                                            to disable analog o
                                                            n PA0, PA1
   87 00000040 600B            STR              R3, [R1]
   88 00000042         
   89 00000042         ; Enable alternate functions selected
   90 00000042 4922            LDR              R1, =PORTA_AFSEL
   91 00000044 680B            LDR              R3, [R1]
   92 00000046 F043 0303       ORR              R3, R3, #0x03 ; set bits 1,0 to
                                                             enable alt functio
                                                            ns on PA0, PA1
   93 0000004A 600B            STR              R3, [R1]
   94 0000004C         
   95 0000004C         ; Select alternate function to be used (UART on PA0, PA1
                       )
   96 0000004C 4920            LDR              R1, =PORTA_PCTL
   97 0000004E 680B            LDR              R3, [R1]
   98 00000050 F043 0311       ORR              R3, R3, #0x11 ; set bits 4,0 to
                                                             select UART Rx, Tx
                                                            
   99 00000054 600B            STR              R3, [R1]
  100 00000056         
  101 00000056         
  102 00000056         ; Setup UART *******************************************
                       **********************
  103 00000056         ;UART0
  104 00000056         ; Disable UART while setting up
  105 00000056 491F            LDR              R1, =UART0_CTL
  106 00000058 680B            LDR              R3, [R1]
  107 0000005A F023 0301       BIC              R3, R3, #0x01 ; Clear bit 0 to 
                                                            disable UART0 while
                                                            
  108 0000005E 600B            STR              R3, [R1]    ; setting up
  109 00000060         
  110 00000060         ; Set baud rate to 9600. Divisor = 16MHz/(16*9600)= 104.
                       16666
  111 00000060         ; Set integer part to 104
  112 00000060 491D            LDR              R1, =UART0_IBRD



ARM Macro Assembler    Page 4 


  113 00000062 F04F 0368       MOV              R3, #104    ;
  114 00000066 600B            STR              R3, [R1]
  115 00000068         
  116 00000068         ; Set fractional part
  117 00000068         ; 0.16666*64+0.5 = 11.16666 => Integer = 11
  118 00000068 491C            LDR              R1, =UART0_FBRD
  119 0000006A F04F 030B       MOV              R3, #11
  120 0000006E 600B            STR              R3, [R1]
  121 00000070         
  122 00000070         ; Set serial parameters
  123 00000070 491B            LDR              R1, =UART0_LCRH
  124 00000072 F04F 0370       MOV              R3, #0x70   ; No stick parity, 
                                                            8bit, FIFO enabled,
                                                             
  125 00000076 600B            STR              R3, [R1]    ; One stop bit, Dis
                                                            able parity, Normal
                                                             use
  126 00000078         
  127 00000078         ; Enable UART, TX, RX
  128 00000078 4916            LDR              R1, =UART0_CTL
  129 0000007A 680B            LDR              R3, [R1]
  130 0000007C F240 3201       MOV              R2, #0x00000301 
                                                            ; Set bits 9,8,0
  131 00000080 EA43 0302       ORR              R3, R3, R2
  132 00000084 600B            STR              R3, [R1]
  133 00000086 BF00            NOP                          ; let UART settle
  134 00000088 BF00            NOP
  135 0000008A BF00            NOP
  136 0000008C         
  137 0000008C         ; Preload R4 with UART data address
  138 0000008C 4C15            LDR              R4, =UART0_DR
  139 0000008E         
  140 0000008E         loop
  141 0000008E F810 2B01       LDRB             R2, [R0],#1 ; load character, p
                                                            ost inc address
  142 00000092 2A04            CMP              R2,#0x04    ; has end character
                                                             been reached?
  143 00000094 D00A            BEQ              done        ; if so, end
  144 00000096         waitR
  145 00000096         ; check if UART is ready to send (buffer is empty)
  146 00000096 4914            LDR              R1, =UART0_FR ; load UART statu
                                                            s register address
  147 00000098 680B            LDR              R3, [R1]
  148 0000009A F013 0320       ANDS             R3,R3,#0x20 ; check if TXFF = 1
                                                            
  149 0000009E D1FA            BNE              waitR       ; If so, UART is fu
                                                            ll, so wait / check
                                                             again
  150 000000A0         ; else
  151 000000A0 6022            STR              R2,[R4]     ; send character 
  152 000000A2         
  153 000000A2         
  154 000000A2         waitD
  155 000000A2         ; check if UART is done transmitting
  156 000000A2 680B            LDR              R3, [R1]
  157 000000A4 F013 0308       ANDS             R3,R3,#0x08 ; check if BUSY = 1
                                                            
  158 000000A8 D1FB            BNE              waitD       ; If so, UART is bu
                                                            sy, so wait / check



ARM Macro Assembler    Page 5 


                                                             again
  159 000000AA         
  160 000000AA E7F0            B                loop
  161 000000AC         
  162 000000AC         done
  163 000000AC         
  164 000000AC         
  165 000000AC         ; Restore PLL
  166 000000AC 4902            LDR              R1,=SYSCTL_RCC2_R
  167 000000AE BC08            POP              {R3}        ; restore PLL state
                                                            
  168 000000B0 600B            STR              R3,[R1]
  169 000000B2         
  170 000000B2         
  171 000000B2         
  172 000000B2 BC1E            POP              {R1-R4}     ; restore processor
                                                             state
  173 000000B4 4770            BX               LR          ; return
  174 000000B6         
  175 000000B6 00 00           ALIGN
  176 000000B8                 END
              400FE070 
              400FE618 
              400FE608 
              4000451C 
              40004528 
              40004420 
              4000452C 
              4000C030 
              4000C024 
              4000C028 
              4000C02C 
              4000C000 
              4000C018 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\outstr.d -o.\objects\outstr.o -I.\RTE\_Target_1 -IC:\
Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\
TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="
__UVISION_VERSION SETA 526" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6P
M SETA 1" --list=.\listings\outstr.lst OutStr.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 38 in file OutStr.s
   Uses
      None
Comment: .text unused
OutStr 00000000

Symbol: OutStr
   Definitions
      At line 43 in file OutStr.s
   Uses
      At line 41 in file OutStr.s
Comment: OutStr used once
done 000000AC

Symbol: done
   Definitions
      At line 162 in file OutStr.s
   Uses
      At line 143 in file OutStr.s
Comment: done used once
loop 0000008E

Symbol: loop
   Definitions
      At line 140 in file OutStr.s
   Uses
      At line 160 in file OutStr.s
Comment: loop used once
waitD 000000A2

Symbol: waitD
   Definitions
      At line 154 in file OutStr.s
   Uses
      At line 158 in file OutStr.s
Comment: waitD used once
waitR 00000096

Symbol: waitR
   Definitions
      At line 144 in file OutStr.s
   Uses
      At line 149 in file OutStr.s
Comment: waitR used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PORTA_AFSEL 40004420

Symbol: PORTA_AFSEL
   Definitions
      At line 19 in file OutStr.s
   Uses
      At line 90 in file OutStr.s
Comment: PORTA_AFSEL used once
PORTA_AMSEL 40004528

Symbol: PORTA_AMSEL
   Definitions
      At line 20 in file OutStr.s
   Uses
      At line 84 in file OutStr.s
Comment: PORTA_AMSEL used once
PORTA_DEN 4000451C

Symbol: PORTA_DEN
   Definitions
      At line 17 in file OutStr.s
   Uses
      At line 78 in file OutStr.s
Comment: PORTA_DEN used once
PORTA_DR2R 40004500

Symbol: PORTA_DR2R
   Definitions
      At line 21 in file OutStr.s
   Uses
      None
Comment: PORTA_DR2R unused
PORTA_PCTL 4000452C

Symbol: PORTA_PCTL
   Definitions
      At line 18 in file OutStr.s
   Uses
      At line 96 in file OutStr.s
Comment: PORTA_PCTL used once
RCGCGPIO 400FE608

Symbol: RCGCGPIO
   Definitions
      At line 15 in file OutStr.s
   Uses
      At line 69 in file OutStr.s
Comment: RCGCGPIO used once
RCGCUART 400FE618

Symbol: RCGCUART
   Definitions
      At line 25 in file OutStr.s
   Uses
      At line 59 in file OutStr.s
Comment: RCGCUART used once
SYSCTL_RCC2_R 400FE070

Symbol: SYSCTL_RCC2_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 36 in file OutStr.s
   Uses
      At line 48 in file OutStr.s
      At line 166 in file OutStr.s

UART0_CC 4000CFC8

Symbol: UART0_CC
   Definitions
      At line 32 in file OutStr.s
   Uses
      None
Comment: UART0_CC unused
UART0_CTL 4000C030

Symbol: UART0_CTL
   Definitions
      At line 28 in file OutStr.s
   Uses
      At line 105 in file OutStr.s
      At line 128 in file OutStr.s

UART0_DR 4000C000

Symbol: UART0_DR
   Definitions
      At line 27 in file OutStr.s
   Uses
      At line 138 in file OutStr.s
Comment: UART0_DR used once
UART0_FBRD 4000C028

Symbol: UART0_FBRD
   Definitions
      At line 30 in file OutStr.s
   Uses
      At line 118 in file OutStr.s
Comment: UART0_FBRD used once
UART0_FR 4000C018

Symbol: UART0_FR
   Definitions
      At line 33 in file OutStr.s
   Uses
      At line 146 in file OutStr.s
Comment: UART0_FR used once
UART0_IBRD 4000C024

Symbol: UART0_IBRD
   Definitions
      At line 29 in file OutStr.s
   Uses
      At line 112 in file OutStr.s
Comment: UART0_IBRD used once
UART0_LCRH 4000C02C

Symbol: UART0_LCRH
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 31 in file OutStr.s
   Uses
      At line 123 in file OutStr.s
Comment: UART0_LCRH used once
15 symbols
358 symbols in table
